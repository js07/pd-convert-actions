HID,DEFAULT_NAMESPACE,TITLE,DESCRIPTION,PUBLISHED_VERSION_MAJOR,PUBLISHED_VERSION_MINOR,CODE_RAW,CODE_CONFIG_JSON
a_67imr8,get_time_zone,GET /time_zone/{ip_address},"We provide detailed and accurate Timezone data, adjusted for DST where necessary. https://docs.ipdata.co/overview/timezone-detection",0,2,"const config = {
  url: `https://api.ipdata.co/time_zone/${params.ip_address}?api-key=${auths.ipdata_co.api_key}`,
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""ip_address"":{""type"":""string""}},""required"":[""ip_address""]},""this_shape"":{},""uses_dollar_event"":false}"
a_8KiomM,get_carrier,GET /carrier/{ip_address},The ipdata API supports looking up the Mobile Carrier of an IP Address. Our database currently consists of over 2500 carriers in 234 countries. https://docs.ipdata.co/overview/mobile-carrier-detection,0,2,"const config = {
  url: `https://api.ipdata.co/carrier/${params.ip_address}?api-key=${auths.ipdata_co.api_key}`,
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""ip_address"":{""type"":""string""}},""required"":[""ip_address""]},""this_shape"":{},""uses_dollar_event"":false}"
a_jQiLKK,get_ip_data,GET /{ip_address},Lookup a specific IP Address,0,2,"const config = {
  url: `https://api.ipdata.co/${params.ip_address}?api-key=${auths.ipdata_co.api_key}`,
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""ip_address"":{""type"":""string""}},""required"":[""ip_address""]},""this_shape"":{},""uses_dollar_event"":false}"
a_vgi821,get_key_value,Get a Key Value,"KVDB is designed for quick and easy integration into projects that need a globally accessible key-value database. To get started, create at API key at https://kvdb.io/",0,1,"const config = {
  url: `https://kvdb.io/${auths.kvdb.api_key}/${params.key}`
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""key"":{""type"":""string""}},""required"":[""key""]},""this_shape"":{}}"
a_bKiP3K,set_key_value,Set a Key Value,"KVDB is designed for quick and easy integration into projects that need a globally accessible key-value database. To get started, create at API key at https://kvdb.io/",0,1,"const config = {
  method: 'post',
  url: `https://kvdb.io/${auths.kvdb.api_key}/${params.key}`,
  headers: {
    'Content-Type': 'application/x-www-form-urlencoded'
  },
  data: params.value,
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""key"":{""type"":""string"",""description"":""The maximum length of a key is 128 bytes.""},""value"":{""type"":""string""}},""required"":[""key"",""value""]},""this_shape"":{}}"
a_RAiaRw,search_reddit_posts,Search Reddit Posts,Search Reddit posts using the Pushshift.io API. Learn more at https://github.com/pushshift/api,0,1,"const options = {
  url: `https://api.pushshift.io/reddit/search/submission/`,
  method: 'get',
  params: {
    ids: params.ids,
    q: params.q,
    'q:not': params['q:not'],
    title: params.title,
    'title:not': params['title:not'],
    selftext: params.selftext,
    'selftext:not': params['selftext:not'],
    size: params.size,
    fields: params.fields,
    sort: params.sort,
    sort_type: params.sort_type,
    aggs: params.aggs,
    author: params.author,
    subreddit: params.subreddit,
    after: params.after,
    before: params.before,
    score: params.score,
    num_comments: params.num_comments,
    over_18: params.over_18,
    is_video: params.is_video,
    locked: params.locked,
    stickied: params.stickied,
    spoiler: params.spoiler,
    content_mode: params.content_mode,
    frequency: params.frequency,
    metadata: params.metadata
  }
}

return (await require(""@pipedreamhq/platform"").axios(this, options)).data","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""ids"":{""type"":""string"",""description"":""Get specific submissions via their ids"",""example"":""Comma-delimited base36 ids""},""q"":{""type"":""string"",""description"":""Search term. Will search ALL possible fields"",""example"":""String / Quoted String for phrases""},""q:not"":{""type"":""string"",""description"":""Exclude search term. Will exclude these terms"",""example"":""String / Quoted String for phrases""},""title"":{""type"":""string"",""description"":""Searches the title field only"",""example"":""String / Quoted String for phrases""},""title:not"":{""type"":""string"",""description"":""Exclude search term from title. Will exclude these terms"",""example"":""String / Quoted String for phrases""},""selftext"":{""type"":""string"",""description"":""Searches the selftext field only"",""example"":""String / Quoted String for phrases""},""selftext:not"":{""type"":""integer"",""description"":""Exclude search term from selftext. Will exclude these terms"",""example"":""String / Quoted String for phrases""},""size"":{""type"":""integer"",""description"":""Number of results to return (Integer <= 500)"",""example"":""25"",""default"":""25""},""fields"":{""type"":""string"",""description"":""Only return specific fields (comma delimited)"",""example"":""String or comma-delimited string (Multiple values allowed)""},""sort"":{""type"":""string"",""description"":""Sort results in a specific order (\""asc\"" or \""desc\"")"",""enum"":[""asc"",""desc""],""example"":""desc"",""default"":""desc""},""sort_type"":{""type"":""string"",""description"":""Sort by a specific attribute"",""example"":""created_utc"",""enum"":[""score"",""num_comments"",""created_utc""]},""aggs"":{""type"":""string"",""description"":""Return aggregation summary"",""enum"":[""author"",""link_id"",""created_utc"",""subreddit""]},""author"":{""type"":""string"",""description"":""Restrict to a specific author"",""example"":""String or comma-delimited string (Multiple values allowed)""},""subreddit"":{""type"":""string"",""description"":""Restrict to a specific subreddit"",""example"":""String or comma-delimited string (Multiple values allowed)""},""after"":{""type"":""string"",""description"":""Return results after this date. Provide an epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)"",""example"":""Epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)""},""before"":{""type"":""integer"",""description"":""Return results before this date. Provide epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)\n""},""score"":{""type"":""string"",""description"":""Restrict results based on score. Provide integer or > x or < x (i.e. score=>100 or score=<25)\n"",""example"":""Provide integer or > x or < x (i.e. score=>100 or score=<25)""},""num_comments"":{""type"":""string"",""description"":""Restrict results based on number of comments. Integer or > x or < x (i.e. num_comments=>100)"",""example"":""Integer or > x or < x (i.e. num_comments=>100)""},""over_18"":{""type"":""boolean"",""description"":""Restrict to nsfw or sfw content""},""is_video"":{""type"":""boolean"",""description"":""Restrict to video content""},""locked"":{""type"":""boolean"",""description"":""Return locked or unlocked threads only""},""stickied"":{""type"":""boolean"",""description"":""Return stickied or unstickied content only""},""spoiler"":{""type"":""boolean"",""description"":""Exclude or include spoilers only""},""content_mode"":{""type"":""boolean"",""description"":""Exclude or include content mode submissions\t""},""frequency"":{""type"":""string"",""description"":""Used with the aggs parameter when set to created_utc"",""enum"":[""second"",""minute"",""hour"",""day""]},""metadata"":{""type"":""boolean"",""description"":""Include metadata search information""}},""required"":[""q""]},""this_shape"":{}}"
a_Q3iwn2,search_reddit_comments,Search Reddit Comments,Search Reddit comments using the Pushshift.io API. Learn more at https://github.com/pushshift/api,0,1,"const options = {
  url: `https://api.pushshift.io/reddit/search/comment/`,
  method: 'get',
  params: {
    q: params.q,
    ids: params.ids,
    size: params.size,
    fields: params.fields,  
    sort: params.sort,
    sort_type: params.sort_type,
    aggs: params.aggs,
    author: params.author,
    subreddit: params.subreddit,
    after: params.after,
    before: params.before,
    frequency: params.frequency,
    metadata: params.metadata
  }
}

return (await require(""@pipedreamhq/platform"").axios(this, options)).data","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""q"":{""type"":""string"",""description"":""Search term. Will search ALL possible fields"",""example"":""String / Quoted String for phrases""},""ids"":{""type"":""string"",""description"":""Get specific comments via their ids"",""example"":""Comma-delimited base36 ids""},""size"":{""type"":""integer"",""description"":""Number of results to return\t(Integer <= 500)"",""example"":""25""},""fields"":{""type"":""string""},""sort"":{""type"":""string"",""description"":""Sort results in a specific order (\""asc\"" or \""desc\"")"",""enum"":[""asc"",""desc""],""example"":""desc"",""default"":""desc""},""sort_type"":{""type"":""string"",""description"":""Sort by a specific attribute"",""example"":""created_utc"",""enum"":[""score"",""num_comments"",""created_utc""]},""aggs"":{""type"":""string"",""description"":""Return aggregation summary"",""enum"":[""author"",""link_id"",""created_utc"",""subreddit""]},""author"":{""type"":""string"",""description"":""Restrict to a specific author"",""example"":""String or comma-delimited string (Multiple values allowed)""},""subreddit"":{""type"":""string"",""description"":""Restrict to a specific subreddit"",""example"":""String or comma-delimited string (Multiple values allowed)""},""after"":{""type"":""string"",""description"":""Return results after this date. Provide an epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)"",""example"":""Epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)""},""before"":{""type"":""integer"",""description"":""Return results before this date. Provide epoch value or Integer + \""s,m,h,d\"" (i.e. 30d for 30 days)\n""},""frequency"":{""type"":""string"",""description"":""Used with the aggs parameter when set to created_utc"",""enum"":[""second"",""minute"",""hour"",""day""]},""metadata"":{""type"":""boolean"",""description"":""Include metadata search information""}},""required"":[""q""]},""this_shape"":{}}"
a_8KiVQV,get_league,Get league,Get a single league by id,0,1,"const config = {
  url: `http://api.pathofexile.com/league/${params.id}`,
  params: {
    realm: params.realm || ""pc"",
    ladder: params.ladder || ""0"",
    ladderLimit: params.ladderLimit || 20,
    ladderOffset: params.ladderOffset || 0,
    ladderTrack: params.ladderTrack,
  }
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""id"":{""type"":""string"",""_label"":""League ID"",""description"":""The id (name) of the league.""},""realm"":{""type"":""string"",""description"":""The realm of the league: pc (default), xbox, or sony."",""default"":""pc""},""ladder"":{""type"":""string"",""description"":""Set to 1 to include the ladder in the response. The ladder will be in included in the \""ladder\"" key. Defaults to 0, excluding the ladder. Please note that the ladder can be retrieved using the ladder resource, and that retrieving it using the league API is just an optimization that can be used if you are requesting the league anyway."",""default"":""0"",""enum"":[""0"",""1""]},""ladderLimit"":{""type"":""string"",""_label"":""Ladder limit"",""description"":""When including the ladder with ladder=1, this specifies the number of ladder entries to include. Default: 20, Max: 200."",""default"":""20""},""ladderOffset"":{""type"":""string"",""_label"":""Ladder offset"",""description"":""When including the ladder with ladder=1, this specifies the offset to the first ladder entry to include. Default: 0."",""default"":""0""},""ladderTrack"":{""type"":""string"",""description"":""When including the ladder with ladder=1, this setting adds unique IDs for each character returned. These can be used when name conflicts occur."",""_label"":""Ladder track""}},""required"":[""id""]},""this_shape"":{}}"
a_B0izap,get_public_stash_tabs,Get public stash tabs,"Retrieves a list of stashes, accounts, and items as described above in the Introduction section.",0,1,"const config = {
  url: ""http://api.pathofexile.com/public-stash-tabs/"",
  params: {
    id: params.id,
  }
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""id"":{""type"":""string"",""_label"":""Next change ID"",""default"":""0""}},""required"":[]},""this_shape"":{}}"
a_k6iYqj,get_ladder,Get ladder,Get a ladder by league id. There is a restriction in place on the last ladder entry you are able to retrieve which is set to 15000.,0,1,"const config = {
  url: `http://api.pathofexile.com/ladders/${params.id}`,
  params: {
    realm: params.realm || ""pc"",
    limit: params.limit || 20,
    offset: params.offset || 0,
    type: params.type || ""league"",
    track: params.track || true,
    accountName: params.accountName,
    difficulty: params.difficulty,
    start: params.start,
  }
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""id"":{""type"":""string"",""description"":""The id (name) of the league for the ladder you want to retrieve."",""_label"":""League ID""},""realm"":{""type"":""string"",""description"":""The realm of the league for the ladder you want to retrieve: pc (default), xbox, or sony."",""default"":""pc"",""enum"":[""pc"",""xbox"",""sony""]},""limit"":{""type"":""string"",""description"":""Specifies the number of ladder entries to include. Default: 20, Max: 200."",""default"":""20""},""offset"":{""type"":""string"",""description"":""Specifies the offset to the first ladder entry to include. Default: 0."",""default"":""0""},""type"":{""type"":""string"",""description"":""Specifies the type of ladder: league (default), pvp, labyrinth."",""default"":""league"",""enum"":[""league"",""pvp"",""labyrinth""]},""track"":{""type"":""boolean"",""description"":""Adds unique IDs for each character returned. These can be used when name conflicts occur. Default: true.""},""accountName"":{""type"":""string"",""description"":""League only: Filters by account name within the first 15000 results."",""_label"":""Account name""},""difficulty"":{""type"":""string"",""description"":""Labyrinth only: Standard (1), Cruel (2), or Merciless (3)."",""enum"":[""1"",""2"",""3""]},""start"":{""type"":""string"",""description"":""Labyrinth only: Timestamp of the ladder you want.""}},""required"":[""id""]},""this_shape"":{}}"
a_bKiPAo,add_documents,Add Documents,Add documents to a collection in Rockset. Learn more at https://docs.rockset.com/rest/#adddocuments.,0,1,"const data = {
  ""data"": params.data
}

return await require(""@pipedreamhq/platform"").axios(this, {
  method: ""POST"",
  url: `https://api.rs2.usw2.rockset.com/v1/orgs/self/ws/${params.workspace}/collections/${params.collection}/docs
`,
  headers: {
    ""Authorization"": `ApiKey ${auths.rockset.apikey}`,
  },
  data
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""data"":{""type"":""array"",""description"":""Array of JSON documents. Learn more at https://docs.rockset.com/rest/#adddocuments."",""_label"":""Data"",""example"":""[ { \""foo\"" : \""bar\"" } ]"",""items"":{""type"":""string""}},""workspace"":{""type"":""string"",""description"":""Name of the workspace. "",""_label"":""Workspace"",""example"":""commons""},""collection"":{""type"":""string"",""_label"":""Collection"",""example"":""thebestcollection"",""description"":""Name of the collection.""}},""required"":[""data"",""workspace"",""collection""]},""this_shape"":{}}"
a_RAiaRQ,create_api_key,Create API Key,Create a new API key for the authenticated user.,0,1,"const data = {
  ""name"": params.name
}

return await require(""@pipedreamhq/platform"").axios(this, {
  method: ""POST"",
  url: `https://api.rs2.usw2.rockset.com/v1/orgs/self/users/self/apikeys`,
  headers: {
    ""Authorization"": `ApiKey ${auths.rockset.apikey}`,
  },
  data
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""name"":{""type"":""string"",""description"":""Descriptive label for the API key."",""_label"":""Name"",""example"":""event-logger""}},""required"":[""name""]},""this_shape"":{}}"
a_poikrY,create_integration,Create Integration,Create a new integration with Rockset. Learn more at https://docs.rockset.com/rest/#createintegration,0,1,"const data = {
  ""name"": params.name,
  ""description"": params.description,
  ""s3"": params.s3,
  ""kinesis"": params.kinesis,
  ""dynamodb"": params.dynamodb,
  ""redshift"": params.redshift,
  ""gcs"": params.gcs,
  ""segment"": params.segment,
  ""kafka"": params.kafka
}

return await require(""@pipedreamhq/platform"").axios(this, {
  method: ""POST"",
  url: `https://api.rs2.usw2.rockset.com/v1/orgs/self/integrations`,
  headers: {
    ""Authorization"": `ApiKey ${auths.rockset.apikey}`,
  },
  data
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""name"":{""type"":""string"",""description"":""Descriptive label for the integration."",""example"":""event-logs""},""description"":{""type"":""string"",""example"":""AWS account with event data for the data science team."",""description"":""Description for the integration.""},""s3"":{""type"":""object"",""description"":""Amazon S3 details, must have one of aws_access_key or aws_role. E.g., `{\n      \""aws_role\"": {\n        \""aws_role_arn\"": \""arn:aws:iam::2378964092:role/rockset-role\""\n      },\n      \""aws_access_key\"": {\n        \""aws_access_key_id\"": \""AKIAIOSFODNN7EXAMPLE\"",\n        \""aws_secret_access_key\"": \""wJal....\""\n      }\n    }`""},""kinesis"":{""type"":""object"",""description"":""Amazon Kinesis details, must have one of aws_access_key or aws_role. E.g., `{\n      \""aws_role\"": {\n        \""aws_role_arn\"": \""arn:aws:iam::2378964092:role/rockset-role\""\n      },\n      \""aws_access_key\"": {\n        \""aws_access_key_id\"": \""AKIAIOSFODNN7EXAMPLE\"",\n        \""aws_secret_access_key\"": \""wJal....\""\n      }\n    }`""},""dynamodb"":{""type"":""object"",""description"":""Amazon DynamoDB details, must have one of aws_access_key or aws_role. E.g., `{\n      \""aws_access_key\"": {\n        \""aws_access_key_id\"": \""AKIAIOSFODNN7EXAMPLE\"",\n        \""aws_secret_access_key\"": \""wJal....\""\n      },\n      \""aws_role\"": {\n        \""aws_role_arn\"": \""arn:aws:iam::2378964092:role/rockset-role\""\n      }\n    }`""},""redshift"":{""type"":""object"",""description"":""Amazon Redshift details. E.g., `{\n      \""aws_access_key\"": {\n        \""aws_access_key_id\"": \""AKIAIOSFODNN7EXAMPLE\"",\n        \""aws_secret_access_key\"": \""wJal....\""\n      },\n      \""username\"": \""awsuser\"",\n      \""password\"": \""pswd....\"",\n      \""host\"": \""test.yuyugt.us-west-2.redshift.amazonaws.com\"",\n      \""port\"": 5439,\n      \""s3_bucket_path\"": \""s3://redshift-unload\""\n    }`""},""gcs"":{""type"":""object"",""description"":""GCS details. E.g., `{\n      \""gcp_service_account\"": {}\n    }`""},""segment"":{""type"":""object""},""kafka"":{""type"":""object"",""description"":""E.g., `{\n      \""kafka_topic_names\"": [\n        null\n      ],\n      \""kafka_data_format\"": \""json\"",\n      \""source_status_by_topic\"": \""topic-a:DORMANT\""\n    }`""}},""required"":[""name""]},""this_shape"":{}}"
a_poikPY,send_new_message,Send new message,Sends a new message from a channel. It will create a new conversation.,0,2,"return await require(""@pipedreamhq/platform"").axios(this, {
  url: `https://api2.frontapp.com/channels/${params.channel_id}/messages`,
  params: {
    author_id: params.author_id,
    sender_name: params.sender_name,
    subject: params.subject,
    body: params.body,
    text: params.text	,
    attachments: params.attachments,
    options: params.options,
    options_tags: params.options_tags,
    options_archive: params.options_archive,
    to: params.to,
    cc: params.cc,
    bcc: params.bcc,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""channel_id"":{""type"":""string"",""description"":""Id or address of the channel from which to send the message""},""author_id"":{""type"":""string"",""description"":""ID of the teammate on behalf of whom the answer is sent"",""example"":""alt:email:leela@planet-express.com""},""sender_name"":{""type"":""string"",""description"":""Name used for the sender info of the message"",""example"":""Leela""},""subject"":{""type"":""string"",""example"":""Good news everyone!"",""description"":""Subject of the message for email message""},""body"":{""type"":""string"",""description"":""Body of the message"",""example"":""Why is Zoidberg the only one still alone?""},""text"":{""type"":""string"",""example"":""Why is Zoidberg the only one still alone?"",""description"":""Text version of the body for messages with non-text body""},""attachments"":{""type"":""array"",""description"":""Binary data of the attached files. Available only for [multipart request](https://dev.frontapp.com/#send-multipart-request)."",""items"":{""type"":""string""}},""options"":{""type"":""object"",""description"":""Sending options"",""properties"":{},""required"":[]},""options_tags"":{""type"":""array"",""description"":""List of tag names to add to the conversation (unknown tags will automatically be created)"",""items"":{""type"":""string""}},""options_archive"":{""type"":""boolean"",""description"":""Archive the conversation right when sending the message (Default: true)"",""example"":""true""},""to"":{""type"":""array"",""description"":""List of the recipient handles who will receive this message"",""items"":{""type"":""string""},""example"":""alculon@momsbot.com""},""cc"":{""type"":""array"",""description"":""List of the recipient handles who will receive a copy of this message"",""items"":{""type"":""string""}},""bcc"":{""type"":""array"",""description"":""List of the recipient handles who will receive a blind copy of this message"",""items"":{""type"":""string""}}},""required"":[""channel_id"",""body"",""to""]},""this_shape"":{}}"
a_2wim5R,track,Track actions your users perform,Track lets you record the actions your users perform (note requires userId or anonymousId),0,3,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/track`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    anonymousId: params.anonymousId,
    context: params.context,
    event: params.event,
    integrations: params.integrations,
    properties: params.properties,
    timestamp: params.timestamp,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""anonymousId"":{""type"":""string"",""description"":""A pseudo-unique substitute for a User ID, for cases when you dont have an absolutely unique identifier. A userId or an anonymousId is required.""},""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale""},""event"":{""type"":""string"",""description"":""Name of the action that a user has performed.""},""integrations"":{""type"":""object"",""description"":""Dictionary of destinations to either enable or disable""},""properties"":{""type"":""object"",""description"":""\tFree-form dictionary of properties of the event, like revenue""},""timestamp"":{""type"":""string"",""description"":""ISO-8601 date string""},""userId"":{""type"":""string"",""description"":""Unique identifier for the user in your database. A userId or an anonymousId is required.""}},""required"":[""event""]},""this_shape"":{}}"
a_eli5j5,screen,Record whenever a user sees a screen,The screen method let you record whenever a user sees a screen of your mobile app (note requires userId or anonymousId),0,1,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/screen`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    anonymousId: params.anonymousId,
    context: params.context,
    integrations: params.integrations,
    name: params.name,
    properties: params.properties,
    timestamp: params.timestamp,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""anonymousId"":{""type"":""string"",""description"":""A pseudo-unique substitute for a User ID, for cases when you dont have an absolutely unique identifier. A userId or an anonymousId is required."",""example"":""019mr8mf4r""},""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale""},""integrations"":{""type"":""object"",""description"":""Dictionary of destinations to either enable or disable""},""name"":{""type"":""string"",""description"":""Name of the screen""},""properties"":{""type"":""object"",""description"":""Free-form dictionary of properties of the screen, like name""},""timestamp"":{""type"":""string"",""description"":""Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string.""},""userId"":{""type"":""string"",""description"":""Unique identifier for the user in your database""}},""required"":[]},""this_shape"":{}}"
a_poik7m,identify,"Identify a user, tie them to their actions and record traits about them",identify lets you tie a user to their actions and record traits about them. It includes a unique User ID and any optional traits you know about them (note requires userId or anonymousId),0,2,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/identify`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    anonymousId: params.anonymousId,
    context: params.context,
    integrations: params.integrations,
    timestamp: params.timestamp,
    traits: params.traits,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""anonymousId"":{""type"":""string"",""description"":""A pseudo-unique substitute for a User ID, for cases when you dont have an absolutely unique identifier. A userId or an anonymousId is required."",""example"":""019mr8mf4r""},""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale""},""integrations"":{""type"":""object"",""description"":""Dictionary of destinations to either enable or disable""},""timestamp"":{""type"":""string"",""description"":""Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API.  It is an ISO-8601 date string."",""example"":""2012-12-02T00:30:08.276Z""},""traits"":{""type"":""object"",""description"":""Free-form dictionary of traits of the user, like email or name.""},""userId"":{""type"":""string"",""description"":""Unique identifier for the user in your database. A userId or an anonymousId is required.""}},""required"":[]},""this_shape"":{}}"
a_YEiPdk,page,Record page views on your website,"The page method lets you record page views on your website, along with optional extra information about the page being viewed (note requires userId or anonymousId)",0,2,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/page`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    anonymousId: params.anonymousId,
    context: params.context,
    integrations: params.integrations,
    name: params.name,
    properties: params.properties,
    timestamp: params.timestamp,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""anonymousId"":{""type"":""string"",""example"":""019mr8mf4r"",""description"":""A pseudo-unique substitute for a User ID, for cases when you dont have an absolutely unique identifier. A userId or an anonymousId is required.""},""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale""},""integrations"":{""type"":""object"",""description"":""Dictionary of destinations to either enable or disable""},""name"":{""type"":""string"",""description"":""\tName of the page"",""example"":""Signup""},""properties"":{""type"":""object"",""description"":""Free-form dictionary of properties of the page, like url and referrer""},""timestamp"":{""type"":""string"",""description"":""Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string."",""example"":""2012-12-02T00:31:29.738Z""},""userId"":{""type"":""string"",""description"":""Unique identifier for the user in your database. A userId or an anonymousId is required.""}},""required"":[]},""this_shape"":{}}"
a_EViozl,alias,Associate one identity with another,Alias is how you associate one identity with another.,0,1,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/alias`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    context: params.context,
    integrations: params.integrations,
    previousId: params.previousId,
    timestamp: params.timestamp,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale"",""properties"":{},""required"":[]},""integrations"":{""type"":""object"",""properties"":{},""required"":[],""description"":""Dictionary of destinations to either enable or disable""},""previousId"":{""type"":""string"",""description"":""Previous unique identifier for the user"",""_label"":""39239-239239-239239-23923""},""timestamp"":{""type"":""string"",""description"":""Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string.""},""userId"":{""type"":""string"",""example"":""019mr8mf4r"",""description"":""Unique identifier for the user in your database., A userId or an anonymousId is required.""}},""required"":[""previousId""]},""this_shape"":{}}"
a_Mdi8dg,group,Associate an identified user with a group,Group lets you associate an identified user with a group (note requires userId or anonymousId),0,2,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: 'post',
  url: `https://api.segment.io/v1/group`,
  auth: {
    username: auths.segment.write_key,
  },
  data: {
    anonymousId: params.anonymousId,
    context: params.context,
    groupId: params.groupId,
    integrations: params.integrations,
    timestamp: params.timestamp,
    traits: params.traits,
    userId: params.userId,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""anonymousId"":{""type"":""string"",""description"":""A pseudo-unique substitute for a User ID, for cases when you dont have an absolutely unique identifier. A userId or an anonymousId is required."",""example"":""019mr8mf4r""},""context"":{""type"":""object"",""description"":""Dictionary of extra information that provides useful context about a message, but is not directly related to the API call like ip address or locale""},""groupId"":{""type"":""string"",""example"":""8e9df332ac"",""description"":""A unique identifier for the group in your database.""},""integrations"":{""type"":""string"",""description"":""Dictionary of destinations to either enable or disable""},""timestamp"":{""type"":""string"",""description"":""Timestamp when the message itself took place, defaulted to the current time by the Segment Tracking API. It is an ISO-8601 date string."",""example"":""2012-12-02T00:31:38.208Z""},""traits"":{""type"":""object"",""description"":""Free-form dictionary of traits of the group, like email or name""},""userId"":{""type"":""string"",""description"":""Unique identifier for the user in your database. A userId or an anonymousId is required.""}},""required"":[""groupId""]},""this_shape"":{}}"
a_4rioN5,remove_background,Remove background,Remove the background of an image,0,1,"const data = {
  image_file: params.image_file,
  image_file_b64: params.image_file_b64,
  image_url: params.image_url,
  size: params.size,
  type: params.type,
  format: params.format,
  roi: params.roi,
  crop: params.crop,
  crop_margin: params.crop_margin,
  scale: params.scale,
  position: params.position,
  channels: params.channels,
  add_shadow: params.add_shadow,
  bg_color: params.bg_color,
  bg_image_url: params.bg_image_url,
  bg_image_file: params.bg_image_file,
}
const config = {
  method: ""post"",
  url: `https://api.remove.bg/v1.0/removebg`,
  headers: {
    ""X-API-Key"": `${auths.remove_bg.api_key}`,
    ""Accept"": `application/json`,
  },
  data,
}
return await require(""@pipedreamhq/platform"").axios(this, config)
","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""image_file"":{""type"":""string"",""description"":""Source image file (binary). (If this parameter is present, the other image source parameters must be empty.)""},""image_file_b64"":{""type"":""string"",""description"":""Source image file (base64-encoded string). (If this parameter is present, the other image source parameters must be empty.)""},""image_url"":{""type"":""string"",""description"":""Source image URL. (If this parameter is present, the other image source parameters must be empty.)"",""example"":""https://www.remove.bg/example-hd.jpg""},""size"":{""type"":""string"",""description"":""Maximum output image resolution: \""preview\"" (default) = Resize image to 0.25 megapixels (e.g. 625×400 pixels)  0.25 credits per image, \""full\"" = Use original image resolution, up to 25 megapixels (e.g. 6250x4000) with formats ZIP or JPG, or up to 10 megapixels (e.g. 4000x2500) with PNG  1 credit per image), \""auto\"" = Use highest available resolution (based on image size and available credits). For backwards-compatibility this parameter also accepts the values \""medium\"" (up to 1.5 megapixels) and \""hd\"" (up to 4 megapixels) for 1 credit per image. The value \""full\"" is also available under the name \""4k\"" and the value \""preview\"" is aliased as \""small\"" and \""regular\""."",""example"":""preview""},""type"":{""type"":""string"",""description"":""Foreground type: \""auto\"" = Automatically detect kind of foreground, \""person\"" = Use person(s) as foreground, \""product\"" = Use product(s) as foreground. \""car\"" = Use car as foreground,"",""example"":""auto""},""format"":{""type"":""string"",""description"":""Result image format: \""auto\"" = Use PNG format if transparent regions exist, otherwise use JPG format (default), \""png\"" = PNG format with alpha transparency, \""jpg\"" = JPG format, no transparency, \""zip\"" = ZIP format, contains color image and alpha matte image, supports transparency (recommended).\n"",""example"":""auto""},""roi"":{""type"":""string"",""description"":""Region of interest: Only contents of this rectangular region can be detected as foreground. Everything outside is considered background and will be removed. The rectangle is defined as two x/y coordinates in the format \""<x1> <y1> <x2> <y2>\"". The coordinates can be in absolute pixels (suffix 'px') or relative to the width/height of the image (suffix '%'). By default, the whole image is the region of interest (\""0% 0% 100% 100%\"").""},""crop"":{""type"":""boolean"",""description"":""Whether to crop off all empty regions (default: false). Note that cropping has no effect on the amount of charged credits."",""enum"":[""true"",""false""]},""crop_margin"":{""type"":""string"",""description"":""Adds a margin around the cropped subject (default: 0). Can be an absolute value (e.g. \""30px\"") or relative to the subject size (e.g. \""10%\""). Can be a single value (all sides), two values (top/bottom and left/right) or four values (top, right, bottom, left). This parameter only has an effect when \""crop=true\"". The maximum margin that can be added on each side is 50% of the subject dimensions or 500 pixels.""},""scale"":{""type"":""string"",""description"":""Scales the subject relative to the total image size. Can be any value from \""10%\"" to \""100%\"", or \""original\"" (default). Scaling the subject implies \""position=center\"" (unless specified otherwise)."",""example"":""original""},""position"":{""type"":""string"",""description"":""Positions the subject within the image canvas. Can be \""original\"" (default unless \""scale\"" is given), \""center\"" (default when \""scale\"" is given) or a value from \""0%\"" to \""100%\"" (both horizontal and vertical) or two values (horizontal, vertical)."",""example"":""original""},""channels"":{""type"":""string"",""description"":""Request either the finalized image (\""rgba\"", default) or an alpha mask (\""alpha\""). Note: Since remove.bg also applies RGB color corrections on edges, using only the alpha mask often leads to a lower final image quality. Therefore \""rgba\"" is recommended.""},""add_shadow"":{""type"":""boolean"",""description"":""Whether to add an artificial shadow to the result (default: false)."",""enum"":[""true"",""false""]},""bg_color"":{""type"":""string"",""description"":""Adds a solid color background. Can be a hex color code (e.g. 81d4fa, fff) or a color name (e.g. green). For semi-transparency, 4-/8-digit hex codes are also supported (e.g. 81d4fa77). (If this parameter is present, the other bg_ parameters must be empty.)""},""bg_image_url"":{""type"":""string"",""description"":""Adds a background image from a URL. The image is centered and resized to fill the canvas while preserving the aspect ratio, unless it already has the exact same dimensions as the foreground image. (If this parameter is present, the other bg_ parameters must be empty.)""},""bg_image_file"":{""type"":""string"",""description"":""Adds a background image from a file (binary). The image is centered and resized to fill the canvas while preserving the aspect ratio, unless it already has the exact same dimensions as the foreground image. (If this parameter is present, the other bg_ parameters must be empty.)""}},""required"":[""image_url""]},""this_shape"":{}}"
a_K5i2KK,upload_picture,Upload picture,,0,2,"const data = {
  image: params.image,
  name: params.name,
}
const config = {
  method: ""post"",
  url: `https://api.imgbb.com/1/upload?key=${auths.imgbb.api_key}`,
  headers: {
    ""Content-Type"": ""application/x-www-form-urlencoded"",
  },
  data: require(""qs"").stringify(data),
}
return await require(""@pipedreamhq/platform"").axios(this, config)","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""image"":{""type"":""string"",""example"":""R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7"",""description"":""A binary file, base64 data, or a URL for an image. (up to 16MB)""},""name"":{""type"":""string"",""description"":""The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data\n""}},""required"":[""image""]},""this_shape"":{}}"
a_njiaQg,send_email,Send an Email,Send an email using Mandrill. See API docs here: https://mandrillapp.com/api/docs/messages.curl.html#method=send,0,1,"return await require(""@pipedreamhq/platform"").axios(this, {
  url: `https://mandrillapp.com/api/1.0/messages/send.json`,
  data: {
    key: auths.mandrill.api_key,
    message: {
      html: params.html,
      text: params.text,
      subject: params.subject,
      from_email: params.from_email,
      from_name: params.from_name,
      to: [{
        email: params.email,
        name: params.name,
        type: params.type || ""to"",
      }]
    }
  }
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""html"":{""type"":""string"",""_label"":""HTML"",""description"":""The full HTML content to be sent""},""text"":{""type"":""string"",""description"":""Optional full text content to be sent""},""subject"":{""type"":""string"",""description"":""The message subject""},""from_email"":{""type"":""string"",""description"":""The sender email address"",""_label"":""From Email""},""from_name"":{""type"":""string"",""_label"":""From Name"",""description"":""Optional from name to be used""},""email"":{""type"":""string"",""description"":""The email address of the recipient""},""name"":{""type"":""string"",""description"":""Optional display name to use for the recipient""},""type"":{""type"":""string"",""description"":""the header type to use for the recipient, defaults to \""to\"" if not provided"",""enum"":[""to"",""cc"",""bcc""]}},""required"":[""email""]},""this_shape"":{}}"
a_bKiP6J,retrieve_info_for_email_address,Retrieve General Information About a Specific Email Address,Make a GET request to https://api.sendpulse.com/emails/{email},0,1,"return await require(""@pipedreamhq/platform"").axios(this, {
  url: `https://api.sendpulse.com/emails/${params.email}`,
  headers: {
    Authorization: `Bearer ${auths.sendpulse.oauth_access_token}`,
  },
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""email"":{""type"":""string"",""description"":""Email address""}},""required"":[""email""]},""this_shape"":{}}"
a_Xzi2Kp,unsubscribe_contact_from_mailing_list,Unsubscribe a Contact From a Defined Mailing List,Make a POST request to https://api.sendpulse.com/addressbooks/{id}/emails/unsubscribe,0,1,"return await require(""@pipedreamhq/platform"").axios(this, {
  method: ""POST"",
  url: `https://api.sendpulse.com/blacklist`,
  headers: {
    Authorization: `Bearer ${auths.sendpulse.oauth_access_token}`,
  },
  data: {
    id: params.id,
    emails: params.emails,
  }
})","{""shareable"":true,""returns"":true,""params_schema"":{""type"":""object"",""properties"":{""id"":{""type"":""string"",""_label"":""ID"",""description"":""The mailing list ID""},""emails"":{""type"":""string"",""description"":""The contact that you want to unsubscribe from the defined mailing list [\""example@yourdomain.com\""]"",""example"":""example@yourdomain.com""}},""required"":[""id"",""emails""]},""this_shape"":{}}"